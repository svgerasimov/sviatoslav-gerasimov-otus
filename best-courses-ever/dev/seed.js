const mongoose = require('mongoose');
const path = require('path');
const fs = require('fs').promises;
require('dotenv').config();

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏
const User = require('../src/models/User');
const Course = require('../src/models/Course');
const Lesson = require('../src/models/Lesson');

// –ß–∏—Ç–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testDataPath = path.join(__dirname, 'test-data.json');

async function seedDatabase() {
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    await mongoose.connect(process.env.MONGO_URI);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ MongoDB');

    // –ß–∏—Ç–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const data = JSON.parse(await fs.readFile(testDataPath, 'utf8'));

    // –û—á–∏—â–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    console.log('üßπ –û—á–∏—â–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...');
    await User.deleteMany({});
    await Course.deleteMany({});
    await Lesson.deleteMany({});

    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('üë• –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const users = [];
    for (const userData of data.users) {
      const { password, ...rest } = userData;
      const user = new User(rest);
      // –ü–∞—Ä–æ–ª—å —Ö–µ—à–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ pre-save hook
      user.password = password;
      await user.save();
      users.push(user);
    }
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);

    // –°–æ–∑–¥–∞–µ–º –∫—É—Ä—Å—ã
    console.log('üìö –°–æ–∑–¥–∞–µ–º –∫—É—Ä—Å—ã...');
    const courses = [];
    for (const courseData of data.courses) {
      const course = await Course.create(courseData);
      courses.push(course);
    }
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${courses.length} –∫—É—Ä—Å–æ–≤`);

    // –°–æ–∑–¥–∞–µ–º —É—Ä–æ–∫–∏
    console.log('üìù –°–æ–∑–¥–∞–µ–º —É—Ä–æ–∫–∏...');
    const lessons = [];
    for (const lessonData of data.lessons) {
      const lesson = await Lesson.create(lessonData);
      lessons.push(lesson);
    }
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${lessons.length} —É—Ä–æ–∫–æ–≤`);

    console.log(
      '\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!'
    );
    console.log('\nüìß –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:');
    console.log('  –ê–¥–º–∏–Ω: admin@example.com / admin123');
    console.log('  –ê–≤—Ç–æ—Ä: author1@example.com / author123');
    console.log('  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: user1@example.com / user123');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\nüëã –û—Ç–∫–ª—é—á–∏–ª–∏—Å—å –æ—Ç MongoDB');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  seedDatabase();
}

module.exports = seedDatabase;
